// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/predict/event/{event_key}": {
            "get": {
                "description": "Retrieves all match predictions for a given FRC event key from the BBE prediction service.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "predictions"
                ],
                "summary": "Get All Match Predictions for an Event",
                "parameters": [
                    {
                        "type": "string",
                        "description": "FRC Event Key (e.g., 2025mxle)",
                        "name": "event_key",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful prediction for all matches",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main.PredictionResponseJSON"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error (e.g., gRPC call failed)",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/predict/{match_key}": {
            "get": {
                "description": "Retrieves a full prediction for a given FRC match key from the BBE prediction service.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "predictions"
                ],
                "summary": "Get Match Prediction",
                "parameters": [
                    {
                        "type": "string",
                        "description": "FRC Match Key (e.g., 2025mxle_qm12)",
                        "name": "match_key",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful prediction",
                        "schema": {
                            "$ref": "#/definitions/main.PredictionResponseJSON"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error (e.g., gRPC call failed)",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "main.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "main.PredictionResponseJSON": {
            "type": "object",
            "properties": {
                "actual_scores": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "integer"
                    },
                    "example": {
                        "blue": 98,
                        "red": 100
                    }
                },
                "actual_winner": {
                    "type": "string",
                    "example": "red"
                },
                "match_key": {
                    "type": "string",
                    "example": "2025mxle_qm1"
                },
                "predicted_scores": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "integer"
                    },
                    "example": {
                        "blue": 112,
                        "red": 95
                    }
                },
                "predicted_winner": {
                    "type": "string",
                    "example": "blue"
                },
                "status": {
                    "type": "string",
                    "example": "played"
                },
                "win_probability": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "number"
                    },
                    "example": {
                        "blue": 0.79,
                        "red": 0.21
                    }
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "Blue Banner Engine (BBE) API",
	Description:      "This is the API server for the Blue Banner Engine, providing FRC match predictions.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
